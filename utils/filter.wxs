/* 此文件为wxml页面参数过滤 */

// 处理日期
var dayjs = function (date, status, state) {
  if (date) {
    // state为true，date格式为：YYYY-MM-DD；state为fasle，date格式为：YYYY-MM-DD HH-MM-SS
    if (state == true) {
      var dateArray = date
    } else {
      var dateArray = date.split(' ')[0]
      var timeArray = date.split(' ')[1]
    }
    // yyyy-mm-dd
    if (status === '0') {
      return dateArray
    }
    // yyyy/mm/dd
    if (status === '0-1') {
      dateArray = dateArray.split('-')
      dateArray = dateArray.join('/')
      return dateArray
    }
    // yyyy-mm-dd hh:mm
    if (status === '1') {
      var dateBox = []
      timeArray = timeArray.split(':')
      timeArray.pop()
      timeArray = timeArray.join(':')
      dateBox.push(dateArray)
      dateBox.push(timeArray)
      dateBox = dateBox.join(' ')
      return dateBox
    }
    // mm/dd
    if (status === '2') {
      dateArray = dateArray.split('-')
      dateArray.shift()
      dateArray = dateArray.join('/')
      return dateArray
    }
    // mm/dd hh:mm
    if (status === '3') {
      var dateBox = []
      dateArray = dateArray.split('-')
      dateArray.shift()
      dateArray = dateArray.join('/')
      timeArray = timeArray.split(':')
      timeArray.pop()
      timeArray = timeArray.join(':')
      dateBox.push(dateArray)
      dateBox.push(timeArray)
      dateBox = dateBox.join(' ')
      return dateBox
    }
    // mm/dd hh:mm 注: date格式为：YYYY-MM-DD HH-MM
    if (status === '3-1') {
      var dateBox = []
      dateArray = dateArray.split('-')
      dateArray.shift()
      dateArray = dateArray.join('/')
      dateBox.push(dateArray)
      dateBox.push(timeArray)
      dateBox = dateBox.join(' ')
      return dateBox
    }
    // yyyy/mm/dd hh:mm
    if (status === '4') {
      var dateBox = []
      dateArray = dateArray.split('-')
      dateArray = dateArray.join('/')
      timeArray = timeArray.split(':')
      timeArray.pop()
      timeArray = timeArray.join(':')
      dateBox.push(dateArray)
      dateBox.push(timeArray)
      dateBox = dateBox.join(' ')
      return dateBox
    }
    // hh:mm
    if (status === '5') {
      timeArray = timeArray.split(':')
      timeArray.pop()
      timeArray = timeArray.join(':')
      return timeArray
    }
    // hh:mm 注: date格式为：YYYY-MM-DD HH-MM
    if (status === '5-1') {
      return timeArray
    }
    // mm/dd hh:mm:ss
    if (status === '6') {
      var dateBox = []
      dateArray = dateArray.split('-')
      dateArray.shift()
      dateArray = dateArray.join('/')
      dateBox.push(dateArray)
      dateBox.push(timeArray)
      dateBox = dateBox.join(' ')
      return dateBox
    }
  }
}

// 车牌
var licensePlate  = function (id_key) {
  var carNo = id_key.toString()
  // carNo = carNo.substr(1)
  carNo = carNo.split('')
  carNo.shift()
  carNo = carNo.join('')
  carNo =  '鲁P·' + carNo
  return carNo
}

// 学生票
var studentTicket = function (ticket) {
  // var sticket = Number(ticket)
  // sticket = sticket / 2
  var sticket = ticket * 1 / 2
  return sticket
}

// 地区代码
var areaCode = function (code) {
  if (code === '01') {
    return '东昌府区'
  } else if (code === '02') {
    return '阳谷县'
  } else if (code === '03') {
    return '莘县'
  } else if (code === '04') {
    return '茌平区'
  } else if (code === '05') {
    return '东阿县'
  } else if (code === '06') {
    return '冠县'
  } else if (code === '07') {
    return '高唐县'
  } else if (code === '08') {
    return '临清市'
  } else {
    return '聊城市'
  }
}

// 约会付款方式
var appointmentPay = function (type) {
  if (type === '01') {
    return '发起方支付'
  } else if (type === '02') {
    return '参与方支付'
  } else if (type === '03') {
    return 'AA制'
  } else if (type === '04') {
    return '免费'
  } else {
    return '暂定'
  }
}

// 性别限制
var limitGander = function (type) {
  if (type === '01') {
    return '仅限男生'
  } else if (type === '02') {
    return '仅限女生'
  } else {
    return '不限性别'
  }
}

// 性别
var gander = function (type) {
  if (type === '01') {
    return '男'
  } else if (type === '02') {
    return '女'
  } else {
    return '保密'
  }
}

// 活动类别
var activeType = function (type) {
  if (type === '01') {
    return '约饭'
  } else if (type === '02') {
    return '看电影'
  } else if (type === '03') {
    return '唱歌'
  } else if (type === '04') {
    return '运动'
  } else if (type === '05') {
    return '旅游'
  } else if (type === '06') {
    return '其他'
  } else {
    return '其他'
  }
}

// 星座
var constellation = function (code) {
  if (code === '01') {
    return '白羊座'
  } else if (code === '02') {
    return '金牛座'
  } else if (code === '03') {
    return '双子座'
  } else if (code === '04') {
    return '巨蟹座'
  } else if (code === '05') {
    return '狮子座'
  } else if (code === '06') {
    return '处女座'
  } else if (code === '07') {
    return '天秤座'
  } else if (code === '08') {
    return '天蝎座'
  } else if (code === '09') {
    return '射手座'
  } else if (code === '010') {
    return '摩羯座'
  } else if (code === '011') {
    return '水瓶座'
  } else if (code === '012') {
    return '双鱼座'
  } else {
    return '保密'
  }
}

// 学历
var education = function (code) {
  if (code === '01') {
    return '高中及以下'
  } else if (code === '02') {
    return '大专'
  } else if (code === '03') {
    return '本科'
  } else if (code === '04') {
    return '研究生'
  } else if (code === '05') {
    return '博士及以上'
  } else if (code === '06') {
    return '保密'
  }
}

// 职业
var occupation = function (code) {
  if (code === '01') {
    return '高中及以下'
  } else if (code === '02') {
    return '生活|服务业'
  } else if (code === '03') {
    return '行政|公务员'
  } else if (code === '04') {
    return '销售|客服'
  } else if (code === '05') {
    return '传媒|通信'
  } else if (code === '06') {
    return '教育|法律'
  } else if (code === '07') {
    return '财会|医疗'
  } else if (code === '08') {
    return '技术|工程师'
  } else if (code === '09') {
    return '学生'
  } else if (code === '010') {
    return '其他'
  } else if (code === '011') {
    return '保密'
  }
}

// 收入
var income = function (code) {
  if (code === '01') {
    return '3千及以下'
  } else if (code === '02') {
    return '3千至5千'
  } else if (code === '03') {
    return '5千至1万'
  } else if (code === '04') {
    return '1万至2万'
  } else if (code === '05') {
    return '2万以上'
  } else if (code === '06') {
    return '保密'
  }
}

// 感情状态
var emotionalState  = function (code) {
  if (code === '01') {
    return '单身'
  } else if (code === '02') {
    return '恋爱'
  } else if (code === '03') {
    return '已婚'
  } else if (code === '04') {
    return '离异'
  } else if (code === '05') {
    return '保密'
  }
}

// 车房
var carHouse = function (code) {
  if (code === '01') {
    return '有'
  } else if (code === '02') {
    return '无'
  } else if (code === '03') {
    return '保密'
  }
}

// 工作分类
var workType  = function (code) {
  if (code === '01') {
    return '生活/服务'
  } else if (code === '02') {
    return '人事/后勤'
  } else if (code === '03') {
    return '采购/销售'
  } else if (code === '04') {
    return '司机/普工'
  } else if (code === '05') {
    return '电商/传媒'
  } else if (code === '06') {
    return '财务/教育'
  } else if (code === '07') {
    return '电气/计算机'
  } else if (code === '08') {
    return '管理/实习生'
  } else if (code === '09') {
    return '其他'
  }
}

// 薪资水平
var workSalary = function (code) {
  if (code === '01') {
    return '1000元以下'
  } else if (code === '02') {
    return '1000-3000元'
  } else if (code === '03') {
    return '3000-5000元'
  } else if (code === '04') {
    return '5000-8000元'
  } else if (code === '05') {
    return '8000-10000元'
  } else if (code === '06') {
    return '10000元以上'
  }
}

// 学历要求
var workEducation = function (code) {
  if (code === '01') {
    return '学历不限'
  } else if (code === '02') {
    return '高中以上学历'
  } else if (code === '03') {
    return '专科以上学历'
  } else if (code === '04') {
    return '本科以上学历'
  } else if (code === '05') {
    return '研究生以上学历'
  }
}

// 经验要求
var workExperience = function (code) {
  if (code === '01') {
    return '工作经验不限'
  } else if (code === '02') {
    return '一至三年工作经验'
  } else if (code === '03') {
    return '三至五年工作经验'
  } else if (code === '04') {
    return '五年以上工作经验'
  }
}

module.exports = {
  dayjs: dayjs,
  licensePlate: licensePlate,
  studentTicket: studentTicket,
  areaCode: areaCode,
  appointmentPay: appointmentPay,
  limitGander: limitGander,
  gander: gander,
  activeType: activeType,
  constellation: constellation,
  education: education,
  occupation: occupation,
  income: income,
  emotionalState: emotionalState,
  carHouse: carHouse,
  workType: workType,
  workSalary: workSalary,
  workEducation: workEducation,
  workExperience: workExperience,
}